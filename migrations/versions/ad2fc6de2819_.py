"""empty message

Revision ID: ad2fc6de2819
Revises: 
Create Date: 2025-03-31 08:43:23.687555

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ad2fc6de2819'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('objectives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('target_amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=20), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('expenses',
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('payer_id', sa.Integer(), nullable=True),
    sa.Column('shared_between', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=80), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payer_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('expense_id'),
    sa.UniqueConstraint('expense_id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sent_to_user_id', sa.Integer(), nullable=True),
    sa.Column('from_user_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=200), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['from_user_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['sent_to_user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('objective_contributions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('objective_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount_contributed', sa.Integer(), nullable=False),
    sa.Column('contributed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['objective_id'], ['objectives.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('objective_to_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('objective_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['objective_id'], ['objectives.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user_to_conversation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('debts',
    sa.Column('debt_id', sa.Integer(), nullable=False),
    sa.Column('expenses_id', sa.Integer(), nullable=True),
    sa.Column('debtor_id', sa.Integer(), nullable=True),
    sa.Column('amount_to_pay', sa.Integer(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('payed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['debtor_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['expenses_id'], ['expenses.expense_id'], ),
    sa.PrimaryKeyConstraint('debt_id'),
    sa.UniqueConstraint('debt_id')
    )
    op.create_table('group',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('group_name', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('expenses', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['expenses'], ['expenses.expense_id'], ),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('group_id')
    )
    op.create_table('group_debts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('debtor_id', sa.Integer(), nullable=False),
    sa.Column('creditor_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('payed_at', sa.DateTime(), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['creditor_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['debtor_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('group_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('payer_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('payed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['payer_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('group_to_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('debt_id', sa.Integer(), nullable=True),
    sa.Column('payer_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('payed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['debt_id'], ['debts.debt_id'], ),
    sa.ForeignKeyConstraint(['payer_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('group_to_user')
    op.drop_table('group_payments')
    op.drop_table('group_debts')
    op.drop_table('group')
    op.drop_table('debts')
    op.drop_table('user_to_conversation')
    op.drop_table('user_contacts')
    op.drop_table('objective_to_user')
    op.drop_table('objective_contributions')
    op.drop_table('messages')
    op.drop_table('expenses')
    op.drop_table('user')
    op.drop_table('objectives')
    op.drop_table('feedback')
    op.drop_table('conversations')
    # ### end Alembic commands ###
